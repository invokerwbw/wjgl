<?xml version="1.0" encoding="UTF-8"?>
<!-- wbw 2016.8.22 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

	<!-- mysql-druid连接池 -->
	<beans profile="mysql">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">

			<property name="name" value="MySQL" />
			<property name="url" value="${dataSource.mysql.url}" />
			 
			<property name="username" value="${dataSource.mysql.username}" />
			<property name="password" value="${dataSource.mysql.password}" />
			<property name="connectionProperties"
				value="config.decrypt=true;config.decrypt.key=${dataSource.mysql.publickey}" />

			<!-- 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 
				防御sql注入的filter:wall -->
			<property name="filters" value="stat,config" />

			<!-- 最大连接池数量(缺省值:8) -->
			<property name="maxActive" value="20" />
			<!-- 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时(缺省值:0) -->
			<property name="initialSize" value="1" />
			<!-- 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。 -->
			<property name="maxWait" value="60000" />
			<!-- 最小连接池数量 -->
			<property name="minIdle" value="1" />

			<!-- 有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 
				2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 (缺省值:1分钟) -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 连接保持空闲而不被驱逐的最长时间(缺省值:30分钟) -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。(缺省值:false) -->
			<property name="testWhileIdle" value="true" />
			<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。(缺省值:true) -->
			<property name="testOnBorrow" value="false" />
			<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能(缺省值:false) -->
			<property name="testOnReturn" value="false" />

			<!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 -->
			<property name="validationQuery" value="SELECT 1" />

			<!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。(缺省值:fasle) -->
			<property name="poolPreparedStatements" value="false" />
			<!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100(缺省值:-1) -->
			<property name="maxOpenPreparedStatements" value="-1" />

			<!-- 在上面的配置中，通常你需要配置url、username、password，maxActive这三项 -->
		</bean>
	</beans>

	<!-- oracle-druid连接池 -->
	<beans profile="oracle">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">

			<property name="name" value="Oracle" />
			<property name="url" value="${dataSource.oracle.url}" />
			<property name="username" value="${dataSource.oracle.username}" />
			<property name="password" value="${dataSource.oracle.password}" />
			<property name="connectionProperties"
				value="config.decrypt=true;config.decrypt.key=${dataSource.oracle.publickey}" />

			<!-- 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 
				防御sql注入的filter:wall -->
			<property name="filters" value="stat,config" />

			<!-- 最大连接池数量(缺省值:8) -->
			<property name="maxActive" value="20" />
			<!-- 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时(缺省值:0) -->
			<property name="initialSize" value="1" />
			<!-- 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。 -->
			<property name="maxWait" value="60000" />
			<!-- 最小连接池数量 -->
			<property name="minIdle" value="1" />

			<!-- 有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 
				2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 (缺省值:1分钟) -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 连接保持空闲而不被驱逐的最长时间(缺省值:30分钟) -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。(缺省值:false) -->
			<property name="testWhileIdle" value="true" />
			<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。(缺省值:true) -->
			<property name="testOnBorrow" value="false" />
			<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能(缺省值:false) -->
			<property name="testOnReturn" value="false" />

			<!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 -->
			<property name="validationQuery" value="SELECT 1" />

			<!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。(缺省值:fasle) -->
			<property name="poolPreparedStatements" value="true" />
			<!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100(缺省值:-1) -->
			<property name="maxOpenPreparedStatements" value="100" />

			<!-- 在上面的配置中，通常你需要配置url、username、password，maxActive这三项 -->
		</bean>
	</beans>

	<!-- greenplum-druid连接池 -->
	<beans profile="greenplum">
		<bean id="gpDataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">

			<property name="name" value="Greenplum" />
			<property name="url" value="${dataSource.greenplum.url}" />
			<property name="username" value="${dataSource.greenplum.username}" />
			<property name="password" value="${dataSource.greenplum.password}" />
			<property name="connectionProperties"
				value="config.decrypt=true;config.decrypt.key=${dataSource.greenplum.publickey}" />

			<!-- 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 
				防御sql注入的filter:wall -->
			<property name="filters" value="stat,config" />

			<!-- 最大连接池数量(缺省值:8) -->
			<property name="maxActive" value="20" />
			<!-- 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时(缺省值:0) -->
			<property name="initialSize" value="1" />
			<!-- 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。 -->
			<property name="maxWait" value="60000" />
			<!-- 最小连接池数量 -->
			<property name="minIdle" value="1" />

			<!-- 有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 
				2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 (缺省值:1分钟) -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 连接保持空闲而不被驱逐的最长时间(缺省值:30分钟) -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。(缺省值:false) -->
			<property name="testWhileIdle" value="true" />
			<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。(缺省值:true) -->
			<property name="testOnBorrow" value="false" />
			<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能(缺省值:false) -->
			<property name="testOnReturn" value="false" />

			<!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 -->
			<property name="validationQuery" value="SELECT 1" />

			<!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。(缺省值:fasle) -->
			<property name="poolPreparedStatements" value="false" />
			<!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100(缺省值:-1) -->
			<property name="maxOpenPreparedStatements" value="-1" />

			<!-- 在上面的配置中，通常你需要配置url、username、password，maxActive这三项 -->
		</bean>
	</beans>

	<!-- h2-druid连接池 -->
	<beans profile="h2">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">

			<property name="name" value="H2" />
			<property name="url" value="${dataSource.h2.url}" />
			<property name="username" value="${dataSource.h2.username}" />
			<property name="password" value="${dataSource.h2.password}" />

			<!-- 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 
				防御sql注入的filter:wall -->
			<property name="filters" value="stat" />

			<!-- 最大连接池数量(缺省值:8) -->
			<property name="maxActive" value="20" />
			<!-- 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时(缺省值:0) -->
			<property name="initialSize" value="1" />
			<!-- 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。 -->
			<property name="maxWait" value="60000" />
			<!-- 最小连接池数量 -->
			<property name="minIdle" value="1" />

			<!-- 有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 
				2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 (缺省值:1分钟) -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 连接保持空闲而不被驱逐的最长时间(缺省值:30分钟) -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。(缺省值:false) -->
			<property name="testWhileIdle" value="true" />
			<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。(缺省值:true) -->
			<property name="testOnBorrow" value="false" />
			<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能(缺省值:false) -->
			<property name="testOnReturn" value="false" />

			<!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。 -->
			<property name="validationQuery" value="SELECT 1" />

			<!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。(缺省值:fasle) -->
			<property name="poolPreparedStatements" value="false" />
			<!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100(缺省值:-1) -->
			<property name="maxOpenPreparedStatements" value="-1" />

			<!-- 在上面的配置中，通常你需要配置url、username、password，maxActive这三项 -->
		</bean>
	</beans>

</beans>
